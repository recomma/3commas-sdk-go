// Code generated by options_generator.go; DO NOT EDIT.
package threecommas

import "time"

// GetCurrencyRatesParamsOption defines a functional option for GetCurrencyRatesParams.
type GetCurrencyRatesParamsOption func(*GetCurrencyRatesParams)

// GetCurrencyRatesParamsFromOptions applies given options and returns a new GetCurrencyRatesParams.
func GetCurrencyRatesParamsFromOptions(opts ...GetCurrencyRatesParamsOption) *GetCurrencyRatesParams {
	p := &GetCurrencyRatesParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithMarketCodeForGetCurrencyRates sets the MarketCode field on GetCurrencyRatesParams.
func WithMarketCodeForGetCurrencyRates(v int) GetCurrencyRatesParamsOption {
	return func(p *GetCurrencyRatesParams) {
		p.MarketCode = v
	}
}

// WithPairForGetCurrencyRates sets the Pair field on GetCurrencyRatesParams.
func WithPairForGetCurrencyRates(v string) GetCurrencyRatesParamsOption {
	return func(p *GetCurrencyRatesParams) {
		p.Pair = v
	}
}

// WithLimitTypeForGetCurrencyRates sets the LimitType field on GetCurrencyRatesParams.
func WithLimitTypeForGetCurrencyRates(v GetCurrencyRatesParamsLimitType) GetCurrencyRatesParamsOption {
	return func(p *GetCurrencyRatesParams) {
		p.LimitType = &v
	}
}

// GetCurrencyRatesWithLeverageDataParamsOption defines a functional option for GetCurrencyRatesWithLeverageDataParams.
type GetCurrencyRatesWithLeverageDataParamsOption func(*GetCurrencyRatesWithLeverageDataParams)

// GetCurrencyRatesWithLeverageDataParamsFromOptions applies given options and returns a new GetCurrencyRatesWithLeverageDataParams.
func GetCurrencyRatesWithLeverageDataParamsFromOptions(opts ...GetCurrencyRatesWithLeverageDataParamsOption) *GetCurrencyRatesWithLeverageDataParams {
	p := &GetCurrencyRatesWithLeverageDataParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithMarketCodeForGetCurrencyRatesWithLeverageData sets the MarketCode field on GetCurrencyRatesWithLeverageDataParams.
func WithMarketCodeForGetCurrencyRatesWithLeverageData(v int) GetCurrencyRatesWithLeverageDataParamsOption {
	return func(p *GetCurrencyRatesWithLeverageDataParams) {
		p.MarketCode = v
	}
}

// WithPairForGetCurrencyRatesWithLeverageData sets the Pair field on GetCurrencyRatesWithLeverageDataParams.
func WithPairForGetCurrencyRatesWithLeverageData(v string) GetCurrencyRatesWithLeverageDataParamsOption {
	return func(p *GetCurrencyRatesWithLeverageDataParams) {
		p.Pair = v
	}
}

// GetMarketPairsParamsOption defines a functional option for GetMarketPairsParams.
type GetMarketPairsParamsOption func(*GetMarketPairsParams)

// GetMarketPairsParamsFromOptions applies given options and returns a new GetMarketPairsParams.
func GetMarketPairsParamsFromOptions(opts ...GetMarketPairsParamsOption) *GetMarketPairsParams {
	p := &GetMarketPairsParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithMarketCodeForGetMarketPairs sets the MarketCode field on GetMarketPairsParams.
func WithMarketCodeForGetMarketPairs(v string) GetMarketPairsParamsOption {
	return func(p *GetMarketPairsParams) {
		p.MarketCode = v
	}
}

// ListBotsParamsOption defines a functional option for ListBotsParams.
type ListBotsParamsOption func(*ListBotsParams)

// ListBotsParamsFromOptions applies given options and returns a new ListBotsParams.
func ListBotsParamsFromOptions(opts ...ListBotsParamsOption) *ListBotsParams {
	p := &ListBotsParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithAccountIdForListBots sets the AccountId field on ListBotsParams.
func WithAccountIdForListBots(v AccountQueryId) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.AccountId = &v
	}
}

// WithStrategyForListBots sets the Strategy field on ListBotsParams.
func WithStrategyForListBots(v ListBotsParamsStrategy) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.Strategy = &v
	}
}

// WithOrderDirectionForListBots sets the OrderDirection field on ListBotsParams.
func WithOrderDirectionForListBots(v ListBotsParamsOrderDirection) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.OrderDirection = &v
	}
}

// WithLimitForListBots sets the Limit field on ListBotsParams.
func WithLimitForListBots(v int) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.Limit = &v
	}
}

// WithOffsetForListBots sets the Offset field on ListBotsParams.
func WithOffsetForListBots(v int) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.Offset = &v
	}
}

// WithFromForListBots sets the From field on ListBotsParams.
func WithFromForListBots(v int) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.From = &v
	}
}

// WithScopeForListBots sets the Scope field on ListBotsParams.
func WithScopeForListBots(v ListBotsParamsScope) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.Scope = &v
	}
}

// WithSortByForListBots sets the SortBy field on ListBotsParams.
func WithSortByForListBots(v ListBotsParamsSortBy) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.SortBy = &v
	}
}

// WithQuoteForListBots sets the Quote field on ListBotsParams.
func WithQuoteForListBots(v string) ListBotsParamsOption {
	return func(p *ListBotsParams) {
		p.Quote = &v
	}
}

// GetBotsStatsParamsOption defines a functional option for GetBotsStatsParams.
type GetBotsStatsParamsOption func(*GetBotsStatsParams)

// GetBotsStatsParamsFromOptions applies given options and returns a new GetBotsStatsParams.
func GetBotsStatsParamsFromOptions(opts ...GetBotsStatsParamsOption) *GetBotsStatsParams {
	p := &GetBotsStatsParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithAccountIdForGetBotsStats sets the AccountId field on GetBotsStatsParams.
func WithAccountIdForGetBotsStats(v AccountQueryId) GetBotsStatsParamsOption {
	return func(p *GetBotsStatsParams) {
		p.AccountId = &v
	}
}

// WithBotIdForGetBotsStats sets the BotId field on GetBotsStatsParams.
func WithBotIdForGetBotsStats(v int) GetBotsStatsParamsOption {
	return func(p *GetBotsStatsParams) {
		p.BotId = &v
	}
}

// GetBotsStatsByDateParamsOption defines a functional option for GetBotsStatsByDateParams.
type GetBotsStatsByDateParamsOption func(*GetBotsStatsByDateParams)

// GetBotsStatsByDateParamsFromOptions applies given options and returns a new GetBotsStatsByDateParams.
func GetBotsStatsByDateParamsFromOptions(opts ...GetBotsStatsByDateParamsOption) *GetBotsStatsByDateParams {
	p := &GetBotsStatsByDateParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithAccountIdForGetBotsStatsByDate sets the AccountId field on GetBotsStatsByDateParams.
func WithAccountIdForGetBotsStatsByDate(v AccountQueryId) GetBotsStatsByDateParamsOption {
	return func(p *GetBotsStatsByDateParams) {
		p.AccountId = &v
	}
}

// WithBotIdForGetBotsStatsByDate sets the BotId field on GetBotsStatsByDateParams.
func WithBotIdForGetBotsStatsByDate(v int) GetBotsStatsByDateParamsOption {
	return func(p *GetBotsStatsByDateParams) {
		p.BotId = &v
	}
}

// WithDateForGetBotsStatsByDate sets the Date field on GetBotsStatsByDateParams.
func WithDateForGetBotsStatsByDate(v time.Time) GetBotsStatsByDateParamsOption {
	return func(p *GetBotsStatsByDateParams) {
		p.Date = v
	}
}

// ListStrategiesParamsOption defines a functional option for ListStrategiesParams.
type ListStrategiesParamsOption func(*ListStrategiesParams)

// ListStrategiesParamsFromOptions applies given options and returns a new ListStrategiesParams.
func ListStrategiesParamsFromOptions(opts ...ListStrategiesParamsOption) *ListStrategiesParams {
	p := &ListStrategiesParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithAccountIdForListStrategies sets the AccountId field on ListStrategiesParams.
func WithAccountIdForListStrategies(v AccountQueryId) ListStrategiesParamsOption {
	return func(p *ListStrategiesParams) {
		p.AccountId = &v
	}
}

// WithTypeForListStrategies sets the Type field on ListStrategiesParams.
func WithTypeForListStrategies(v ListStrategiesParamsType) ListStrategiesParamsOption {
	return func(p *ListStrategiesParams) {
		p.Type = &v
	}
}

// WithStrategyForListStrategies sets the Strategy field on ListStrategiesParams.
func WithStrategyForListStrategies(v ListStrategiesParamsStrategy) ListStrategiesParamsOption {
	return func(p *ListStrategiesParams) {
		p.Strategy = &v
	}
}

// UpdatePairsBlacklistParamsOption defines a functional option for UpdatePairsBlacklistParams.
type UpdatePairsBlacklistParamsOption func(*UpdatePairsBlacklistParams)

// UpdatePairsBlacklistParamsFromOptions applies given options and returns a new UpdatePairsBlacklistParams.
func UpdatePairsBlacklistParamsFromOptions(opts ...UpdatePairsBlacklistParamsOption) *UpdatePairsBlacklistParams {
	p := &UpdatePairsBlacklistParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithPairsForUpdatePairsBlacklist sets the Pairs field on UpdatePairsBlacklistParams.
func WithPairsForUpdatePairsBlacklist(v string) UpdatePairsBlacklistParamsOption {
	return func(p *UpdatePairsBlacklistParams) {
		p.Pairs = v
	}
}

// GetProfitByDayParamsOption defines a functional option for GetProfitByDayParams.
type GetProfitByDayParamsOption func(*GetProfitByDayParams)

// GetProfitByDayParamsFromOptions applies given options and returns a new GetProfitByDayParams.
func GetProfitByDayParamsFromOptions(opts ...GetProfitByDayParamsOption) *GetProfitByDayParams {
	p := &GetProfitByDayParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithDaysForGetProfitByDay sets the Days field on GetProfitByDayParams.
func WithDaysForGetProfitByDay(v int) GetProfitByDayParamsOption {
	return func(p *GetProfitByDayParams) {
		p.Days = &v
	}
}

// GetBotParamsOption defines a functional option for GetBotParams.
type GetBotParamsOption func(*GetBotParams)

// GetBotParamsFromOptions applies given options and returns a new GetBotParams.
func GetBotParamsFromOptions(opts ...GetBotParamsOption) *GetBotParams {
	p := &GetBotParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithIncludeEventsForGetBot sets the IncludeEvents field on GetBotParams.
func WithIncludeEventsForGetBot(v bool) GetBotParamsOption {
	return func(p *GetBotParams) {
		p.IncludeEvents = v
	}
}

// ListDealsParamsOption defines a functional option for ListDealsParams.
type ListDealsParamsOption func(*ListDealsParams)

// ListDealsParamsFromOptions applies given options and returns a new ListDealsParams.
func ListDealsParamsFromOptions(opts ...ListDealsParamsOption) *ListDealsParams {
	p := &ListDealsParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithBotIdForListDeals sets the BotId field on ListDealsParams.
func WithBotIdForListDeals(v int) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.BotId = &v
	}
}

// WithAccountIdForListDeals sets the AccountId field on ListDealsParams.
func WithAccountIdForListDeals(v AccountQueryId) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.AccountId = &v
	}
}

// WithLimitForListDeals sets the Limit field on ListDealsParams.
func WithLimitForListDeals(v int) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Limit = &v
	}
}

// WithOffsetForListDeals sets the Offset field on ListDealsParams.
func WithOffsetForListDeals(v int) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Offset = &v
	}
}

// WithFromForListDeals sets the From field on ListDealsParams.
func WithFromForListDeals(v string) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.From = &v
	}
}

// WithToForListDeals sets the To field on ListDealsParams.
func WithToForListDeals(v string) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.To = &v
	}
}

// WithScopeForListDeals sets the Scope field on ListDealsParams.
func WithScopeForListDeals(v ListDealsParamsScope) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Scope = &v
	}
}

// WithOrderForListDeals sets the Order field on ListDealsParams.
func WithOrderForListDeals(v ListDealsParamsOrder) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Order = &v
	}
}

// WithOrderDirectionForListDeals sets the OrderDirection field on ListDealsParams.
func WithOrderDirectionForListDeals(v ListDealsParamsOrderDirection) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.OrderDirection = &v
	}
}

// WithBaseForListDeals sets the Base field on ListDealsParams.
func WithBaseForListDeals(v string) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Base = &v
	}
}

// WithQuoteForListDeals sets the Quote field on ListDealsParams.
func WithQuoteForListDeals(v string) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Quote = &v
	}
}

// WithNoteForListDeals sets the Note field on ListDealsParams.
func WithNoteForListDeals(v string) ListDealsParamsOption {
	return func(p *ListDealsParams) {
		p.Note = &v
	}
}

// PanicSellDealStepParamsOption defines a functional option for PanicSellDealStepParams.
type PanicSellDealStepParamsOption func(*PanicSellDealStepParams)

// PanicSellDealStepParamsFromOptions applies given options and returns a new PanicSellDealStepParams.
func PanicSellDealStepParamsFromOptions(opts ...PanicSellDealStepParamsOption) *PanicSellDealStepParams {
	p := &PanicSellDealStepParams{}
	for _, opt := range opts {
		opt(p)
	}
	return p
}

// WithTradeIdForPanicSellDealStep sets the TradeId field on PanicSellDealStepParams.
func WithTradeIdForPanicSellDealStep(v TradeQueryId) PanicSellDealStepParamsOption {
	return func(p *PanicSellDealStepParams) {
		p.TradeId = v
	}
}
